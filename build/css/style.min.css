/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;-webkit-box-sizing:border-box;box-sizing:border-box}body{margin:0;font-family:Arial,sans-serif;font-size:14px;color:#1a1a1a}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;padding-bottom:2px;color:#f84545;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}select{display:block;font-size:16px;font-family:sans-serif;font-weight:700;color:#444;line-height:1.3;padding:.6em 1.4em .5em .8em;width:100%;max-width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;border:1px solid #aaa;-webkit-box-shadow:0 1px 0 1px rgba(0,0,0,.04);box-shadow:0 1px 0 1px rgba(0,0,0,.04);border-radius:.5em;-moz-appearance:none;appearance:none;background-color:#fff;background-image:url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E),-webkit-gradient(linear,left top,left bottom,from(#fff),to(#e5e5e5));background-image:url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E),-webkit-linear-gradient(top,#fff 0%,#e5e5e5 100%);background-image:url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E),-o-linear-gradient(top,#fff 0%,#e5e5e5 100%);background-image:url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E),linear-gradient(to bottom,#fff 0%,#e5e5e5 100%);background-repeat:no-repeat,repeat;background-position:right .7em top 50%,0 0;background-size:.65em auto,100%}select::-ms-expand{display:none}select:hover{border-color:#888}select:focus{border-color:#aaa;-webkit-box-shadow:0 0 1px 3px rgba(59,153,252,.7);box-shadow:0 0 1px 3px rgba(59,153,252,.7);box-shadow:0 0 0 3px -moz-mac-focusring;color:#222;outline:0}select option{font-weight:400}:root:lang(ar) select,:root:lang(iw) select,[dir=rtl] select{background-position:left .7em top 50%,0 0;padding:.6em .8em .5em 1.4em}input,select,textarea{-webkit-appearance:none}.container,.wrapper{-webkit-box-sizing:border-box;box-sizing:border-box}.wrapper{padding:0 40px}.container{width:100%;max-width:1920px;margin:0 auto}.visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.invisible{visibility:hidden}.main-grid{width:100%;display:grid;grid-template-areas:'header' 'slider' 'main' 'insta' 'footer';-ms-flex-line-pack:center;align-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.pagewidth{width:100%;max-width:1200px;margin:0 auto;-webkit-box-sizing:border-box;box-sizing:border-box}.more-info{font-size:24px}.scroll-to-bottom{width:70px;height:35px;background:url(../img/icon-arrow-down.png) no-repeat center top;position:fixed;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);bottom:50px;z-index:50;text-indent:-9999em;font-size:0}@font-face{font-family:'Montserrat';src:local("Montserrat"),url(../fonts/montserrat.woff2) format("woff2"),url(../fonts/montserrat.woff) format("woff"),url(../fonts/montserrat.ttf) format("truetype");font-weight:400;font-style:normal}._svg-icon-behance,._svg-icon-periscope,._svg-icon-search,._svg-icon-telegram{background:url(../img/svgsprite.css.svg) no-repeat}._svg-icon-behance{background-position:0 0}._svg-icon-behance-dims{width:32px;height:32px}._svg-icon-periscope{background-position:100% 0}._svg-icon-periscope-dims{width:32px;height:32px}._svg-icon-search{background-position:0 100%}._svg-icon-search-dims{width:32px;height:32px}._svg-icon-telegram{background-position:100% 100%}._svg-icon-telegram-dims{width:32px;height:32px}.header{width:100%;text-align:center;grid-area:header;position:absolute;top:0;left:0;height:150px;padding:34px 0;z-index:5}.header .pagewidth{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header .pagewidth,.nav,.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.nav__list{-webkit-box-align:center;-ms-flex-align:center;align-items:center;list-style:none;margin:0;padding:0}.nav__item{margin:0 50px 10px 0}.nav__link{color:#fff;font-size:14px;text-transform:uppercase;letter-spacing:.4em}.nav--footer .nav__link{color:#1a1a1a}.nav__link:hover{color:#f84545}.slider{width:100%;max-width:100vw;color:#fff;grid-area:slider}.slider,.slider .owl-carousel{height:100vh}.slider .owl-carousel__slide{background-position:center top;background-repeat:no-repeat;background-size:cover}.main .pagewidth,.slider .owl-carousel__content{display:grid;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.slider .owl-carousel__content{justify-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;height:100vh;width:100%}.slider .owl-carousel__content h1{font-size:50px;font-weight:400;letter-spacing:.5em;margin:0 0 20px}.main{width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:#fff;grid-area:main}.main .pagewidth{padding:68px 0;grid-template:300px 300px 480px/repeat(3,1fr);grid-auto-rows:480px;grid-auto-columns:1fr;grid-gap:25px}.main .category{width:100%;background:#000;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-line-pack:end;align-content:flex-end;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;padding:30px;background-position:center center;background-repeat:no-repeat;background-size:cover}.main .category .category__logo{width:100%;display:block;margin:0 0 20px}.main .category .category__title{width:100%;display:block;font-size:30px;letter-spacing:.5em;text-transform:uppercase;color:#fff}.main .category:first-child{padding:40px;grid-area:1/1/3/3}.main .category:first-child .category__title{margin:0 0 30px;font-size:44px}.footer,.instagram{width:100%;text-align:center}.instagram{background:#858587;position:relative;grid-area:insta}.instagram .instagram__images{display:grid;grid-template:1fr/repeat(4,1fr);grid-auto-rows:1fr;grid-auto-columns:1fr}.instagram .instagram__images img{max-width:100%}.instagram .instagram__content{position:absolute;left:0;top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);z-index:10;width:100%;text-align:center}.instagram .instagram__content h2{color:#fff;font-size:50px;letter-spacing:.5em;font-weight:400;margin:0 0 20px}.footer{background:#fff;grid-area:footer;padding:50px 0;z-index:100}.footer .pagewidth,.social-icons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.footer .footer__copy{margin:6px 52px 0 0;letter-spacing:.4em}.social-icons{list-style:none;padding:0;margin:0 0 0 auto}.social-icons .social-icons__item{margin:0 15px 10px}@media (max-width:600px){html{height:100%;overflow:scroll;-webkit-overflow-scrolling:touch}}@media only screen and (max-width:1170px){.header{height:auto}.header .header__logo{width:100%;margin:0 0 20px}.nav,.nav__list{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%}.nav__item{margin:0 15px 20px}.main .pagewidth{grid-template:auto/repeat(2,1fr);grid-auto-rows:auto}.footer .footer__copy{width:100%;text-align:center;margin:0 0 20px}.social-icons{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;margin:10px 0 0}}@media only screen and (max-width:750px){.instagram .instagram__content h2,.slider .owl-carousel__content h1{font-size:24px}.main .pagewidth{grid-template:auto/100%}.main .category .category__title{font-size:20px}.main .category:first-child{grid-area:auto}.main .category:first-child .category__title{font-size:24px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
